name: Terraform [internal]

on:
  push:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/internal/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/internal/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
  TF_INTERNAL_BACKEND_BUCKET: ${{ secrets.TF_INTERNAL_BACKEND_BUCKET }}
  TF_INTERNAL_BACKEND_KEY: ${{ secrets.TF_INTERNAL_BACKEND_KEY }}
  TF_INTERNAL_BACKEND_WORKSPACE_PREFIX: ${{ secrets.TF_INTERNAL_BACKEND_WORKSPACE_PREFIX }}
  TF_INTERNAL_BACKEND_DYNAMODB_TABLE: ${{ secrets.TF_INTERNAL_BACKEND_DYNAMODB_TABLE }}
  TF_VAR_core_backend: '{"bucket":"${{ secrets.TF_CORE_BACKEND_BUCKET }}","key":"${{ secrets.TF_CORE_BACKEND_KEY }}","workspace_key_prefix":"${{ secrets.TF_CORE_BACKEND_WORKSPACE_PREFIX }}","region":"${{ secrets.AWS_REGION }}"}'

jobs:
  terraform-plan:
    runs-on: [self-hosted, dev]
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Init
        working-directory: ./infrastructure/terraform/internal
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_INTERNAL_BACKEND_BUCKET }}" \
            -backend-config="key=${{ env.TF_INTERNAL_BACKEND_KEY }}" \
            -backend-config="workspace_key_prefix=${{ env.TF_BACKEND_INTERNAL_WORKSPACE_PREFIX }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.TF_INTERNAL_BACKEND_DYNAMODB_TABLE }}"

      - name: Terraform Format
        working-directory: ./infrastructure/terraform/internal
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: ./infrastructure/terraform/internal
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ./infrastructure/terraform/internal
        run: |
          terraform plan -out=tfplan -no-color || exit 1
          terraform show -no-color tfplan > plan.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: infrastructure/terraform/internal/plan.txt
          retention-days: 5

  terraform-apply:
    runs-on: [self-hosted, dev]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: dev
    needs: terraform-plan
    concurrency:
      group: terraform-apply-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Init
        working-directory: ./infrastructure/terraform/internal
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_INTERNAL_BACKEND_BUCKET }}" \
            -backend-config="key=${{ env.TF_INTERNAL_BACKEND_KEY }}" \
            -backend-config="workspace_key_prefix=${{ env.TF_BACKEND_INTERNAL_WORKSPACE_PREFIX }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ env.TF_INTERNAL_BACKEND_DYNAMODB_TABLE }}"

      - name: Terraform Apply
        working-directory: ./infrastructure/terraform/internal
        run: terraform apply -auto-approve
