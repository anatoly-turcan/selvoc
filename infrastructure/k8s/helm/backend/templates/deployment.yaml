apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: backend
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        env:
        {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
        {{- end }}
          - name: POSTGRES_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: postgresUsername
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: postgresPassword
          - name: KEYCLOAK_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: keycloakClientSecret
          - name: AMQP_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: rabbitmqUsername
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: rabbitmqPassword
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        readinessProbe:
          tcpSocket: # TODO: add /health endpoint
              port: 3000
          initialDelaySeconds: 3
          periodSeconds: 1
          timeoutSeconds: 1
          failureThreshold: 3
